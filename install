--This inatalls the nessessary files for the computer type given
local args = {...}
local forse = false;
function argErr() 
  error("Usage: "..shell.getRunningProgram().." <computer type> [-f] \n Valid computer types include: yardmaster, infoboard, ticketmaster, loadingplatform \n Options: \n -f: forse.  This will overwrite any settings files or unchanging files")
end -- function 

if #args ~= 1 and #args ~= 2 then
  argErr()
end

if args[2] ~=nil and args[2] == "-f" then 
  forse = true
end --if


function download(url, file)
    local content = http.get(url).readAll()
    if not content then
      error("Could not connect to the internet")
    end
    f = fs.open(file, "w")
    f.write(content)
    f.close()
end

local files = {
  globals={
    queue={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/globals/Queue.lua", name="Queue.lua"},
    common={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/globals/common.lua", name="common.lua"},
    junctions={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/globals/junctions.lua", name="junctions.lua"},
    brain={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/globals/brain.lua", name="brain.lua"},
  },
  ticketmaster={
    startup={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/ticketmaster/startup.lua", name="startup.lua"},
    settings={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/ticketmaster/settings.lua", name="settings.lua"},
    screen={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/ticketmaster/screen.lua", name="screen.lua"},
    button={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/ticketmaster/button", name="button"},
  },
  loadingplatform={
    settings={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/loadingplatform/settings.lua", name="settings.lua"},
    startup={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/loadingplatform/startup.lua", name="startup.lua"},
  },
  infoboard={
    settings={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/infoboards/settings.lua", name="settings.lua"},
    startup={url="https://raw.githubusercontent.com/poster983/rail-manager-computercraft/master/stations/infoboards/startup.lua", name="startup.lua"},
  },
}

local computerTypes = {
    ticketmaster={
      {file=files.ticketmaster.startup},
      {file=files.ticketmaster.settings, dontUpdate=true},
      {file=files.ticketmaster.screen},
      {file=files.ticketmaster.button, dontUpdate=true},
      {file=files.globals.queue, dontUpdate=true},
      {file=files.globals.common},
      {file=files.globals.junctions, dontUpdate=true},
      {file=files.globals.brain},
    },
    loadingplatform={
      {file=files.loadingplatform.startup},
      {file=files.loadingplatform.settings, dontUpdate=true},
      {file=files.globals.common},
    },
    infoboard={
      {file=files.infoboard.startup},
      {file=files.infoboard.settings, dontUpdate=true},
      {file=files.globals.common},
      {file=files.globals.queue, dontUpdate=true},
    },
}

if computerTypes[args[1]] == nil then -- error with computertype
  argErr()
end --if

--download files

for i,v in ipairs(computerTypes[args[1]]) do
    if fs.exists(v.file.name) and v.dontUpdate==true and forse==false then 
      print("Skipping. File: ".. v.file.name .." exists already.  Use the -f option to download")
    else 
      download(v.file.url, v.file.name);
      print("Downloaded: \""..v.file.name .."\"")
    end-- if
end

print("Done.  Reboot to run")

